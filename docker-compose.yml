services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_DB: book_circle
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - network

  backend:
    build: ./backend
    command: >
      sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/backend
    ports:
      - "8000:8000"
    environment:
      USER: ${USER}
      PASSWORD: ${PASSWORD}
      DEBUG: ${DEBUG}
      AUTH0_DOMAIN: ${AUTH0_DOMAIN}
      AUTH0_API_AUDIENCE: ${AUTH0_API_AUDIENCE}
      AUTH0_ALGORITHMS: ${AUTH0_ALGORITHMS}
    depends_on:
      - db
    networks:
      - network

  frontend:
    build:
      context: ./frontend
      target: build  # Target development stage
    command: npm run dev -- --host 0.0.0.0
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/frontend
      - frontend_node_modules:/frontend/node_modules
    environment:
      CHOKIDAR_USEPOLLING: ${CHOKIDAR_USEPOLLING}
      VITE_AUTH0_DOMAIN: ${VITE_AUTH0_DOMAIN}
      VITE_AUTH0_CLIENT_ID: ${VITE_AUTH0_CLIENT_ID}
      VITE_AUTH0_API_AUDIENCE: ${AUTH0_API_AUDIENCE}
    networks:
      - network

volumes:
  postgres_data:
  frontend_node_modules: {}

networks:
  network:
    driver: bridge
    enable_ipv6: false
